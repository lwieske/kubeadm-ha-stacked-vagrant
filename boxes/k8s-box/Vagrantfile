# -*- mode: ruby -*-
# vi: set ft=ruby :

KUBERNETES_VERSION = ENV["KUBERNETES_VERSION"]
CONTAINERD_VERSION = ENV["CONTAINERD_VERSION"]

Vagrant.configure("2") do |config|

    config.vbguest.auto_update = false

    config.vm.box = "bento/almalinux-8.5"

    config.vm.provision "shell",
        env:
            {
                "KUBERNETES_VERSION" => KUBERNETES_VERSION, 
                "CONTAINERD_VERSION" => CONTAINERD_VERSION
            },
        inline: <<-SHELL

        set -x

        echo ${KUBERNETES_VERSION}
        echo ${CONTAINERD_VERSION}

        export PATH=/usr/local/bin:${PATH}

        printenv PATH

        echo overlay       > /etc/modules-load.d/containerd.conf
        echo br_netfilter >> /etc/modules-load.d/containerd.conf

        modprobe overlay
        modprobe br_netfilter

        echo "net.bridge.bridge-nf-call-iptables  = 1" ;> /etc/sysctl.d/99-kubernetes-cri.conf
        echo "net.ipv4.ip_forward                 = 1" >> /etc/sysctl.d/99-kubernetes-cri.conf
        echo "net.bridge.bridge-nf-call-ip6tables = 1" >> /etc/sysctl.d/99-kubernetes-cri.conf

        sysctl --system

        dnf --assumeyes --nogpgcheck install \
            conntrack \
            device-mapper-persistent-data \
            iproute-tc \
            lvm2 \
            socat

        systemctl disable firewalld && systemctl stop firewalld

        setenforce 0
        echo "SELINUX=disabled" > /etc/sysconfig/selinux

        swapoff -a
        sed -e '/swap/ s/^#*/#/' -i /etc/fstab

        cp /vagrant/files/k8s.conf /etc/sysctl.d/k8s.conf

        sysctl --system

        pushd /tmp
            curl -L https://github.com/containerd/containerd/releases/download/v${CONTAINERD_VERSION}/cri-containerd-cni-${CONTAINERD_VERSION}-linux-amd64.tar.gz | \      
            tar --no-overwrite-dir -C / --group=root --owner=root -xzf -
            systemctl daemon-reload
            systemctl start containerd
        popd

        pushd /usr/local/bin
            curl -L --remote-name-all https://storage.googleapis.com/kubernetes-release/release/v${KUBERNETES_VERSION}/bin/linux/amd64/{kubeadm,kubelet,kubectl}
            chmod +x {kubeadm,kubelet,kubectl}
        popd

        mkdir -p /etc/systemd/system/kubelet.service.d /etc/containerd

        cp /vagrant/files/kubelet.service /etc/systemd/system/kubelet.service
        cp /vagrant/files/10-containerd.conf /etc/systemd/system/kubelet.service.d/10-containerd.conf
        containerd config default > /etc/containerd/config.toml
        mkdir -p /var/lib/kubelet/
        
        systemctl daemon-reload

        systemctl enable --now containerd
        systemctl enable --now kubelet

        kubeadm --v=5 config images pull

        dd if=/dev/zero of=/EMPTY bs=1M
        rm -f /EMPTY

        sync

    SHELL

end